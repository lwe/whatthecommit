#!/usr/bin/env ruby -w

class WhatTheCommit
  VERSION = "0.9.4"
  CMD = File.basename($0)
  URL = "http://whatthecommit.com/"
  PROFANITY_CHECK_URL = "http://www.wdyl.com/profanity?q="
  DISCLAIMER = " (courtesy of #{URL})"

  def usage(exit_code = 0)
    puts "Usage: #{CMD} [-n, -o]"
    puts
    puts "Scrapes random commit messages from #{URL}, "
    puts "useful for the daily: git commit -am \"$(#{CMD})\""
    puts
    puts "Options:"
    puts "  -n, --no-disclaimer                 do not append disclaimer"
    puts "  -i [number], --iterations [number]  number of commit messages"
    puts "  -x, --polite                        check for swear words"
    puts "  -xx, --extra-polite                 additional profanity check by google (wdyl)"
    puts "  -o, --open                          open #{URL} in your browser (MacOS X only)"
    puts
    puts "  -v, --version                       show version information and exit"
    puts "  -h, --help                          display this usage and exit"
    puts
    
    exit(exit_code)
  end
  
  def version
    puts "#{CMD} (#{VERSION}) - random commit message generator (#{URL})"
    exit 0
  end
  
  def error(msg)
    STDERR.puts "#{CMD}: [error] #{msg}"
    usage(1)
  end

  def info(msg)
    infos.push "[info] #{msg}"
  end

  def launch_browser; exec "open '#{URL}'" end
  
  def print_random_message
    begin 
      msg = open(URL).select { |e| e =~ /^<p>/ }.first.gsub(/^<p>/, "").gsub("\n", "") + (@show_disclaimer ? DISCLAIMER : '')
      passed = if @polite
        !msg.match(/(wtf|fuck|damn|shit|suck|hell|ass|bitch|crap|screw|piss)/i) &&
        ( @polite != :extra || open(PROFANITY_CHECK_URL << CGI.escape(msg)).read.include?("false") )
      else
        true
      end

      info("rejected: #{msg}") unless passed
    rescue
      # to avoid endless loop if wdyl call fails
      passed = true
      info("errored: #{msg}")
    end until passed

    puts msg
  end
  
  def run(*args)
    require 'open-uri'    
    require 'cgi'

    @polite = false
    @iterations = 1
    @show_disclaimer = true

    while arg = args.shift
      case arg
      when '--help', '-h'     then usage
      when '--version', '-v'  then version
      when '--open', '-o'     then launch_browser
      when '--no-disclaimer', '-n'
        @show_disclaimer = false
      when '--iterations', '-i'
        @iterations = if args.first && !args.first.include?("-")
            args.shift.to_i
          else
            info("assuming you want 10 iterations.. ;)")
            10
          end
      when '--polite', '-x'
        @polite = :yes
      when '--extra-polite', '-xx'
        @polite = :extra
      else
        error("unknown option(s): #{args.first}") unless args.empty?
      end
    end

    @iterations.times do
      print_random_message
    end

    unless infos.empty?
      puts "---"
      infos.each { |info| puts info }
    end
  end

  private

  def infos
    @infos ||= []
  end
  
end

WhatTheCommit.new.run(*ARGV)
